66833e7c9f449d48bd854fa9af476833
"use strict";

/* istanbul ignore next */
function cov_1ebfvcj7rf() {
  var path = "/Users/karishma/work/futureverse/trn-rootnet-api/packages/type-definitions/build/runtime.js";
  var hash = "2c1045b8e6984a1c54dfd9c2c25a2affc428057e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/karishma/work/futureverse/trn-rootnet-api/packages/type-definitions/build/runtime.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 15,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2c1045b8e6984a1c54dfd9c2c25a2affc428057e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ebfvcj7rf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ebfvcj7rf();
cov_1ebfvcj7rf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ebfvcj7rf().s[1]++;
exports.default = {
  rpc: {},
  types: {
    "AccountId": "EthereumAccountId",
    "AccountId20": "EthereumAccountId",
    "AccountId32": "EthereumAccountId",
    "Address": "AccountId",
    "LookupSource": "AccountId",
    "Lookup0": "AccountId",
    "AssetId": "u32",
    "Balance": "u128"
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWViZnZjajdyZiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJycGMiLCJ0eXBlcyJdLCJzb3VyY2VzIjpbInJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgcnBjOiB7fSxcbiAgICB0eXBlczoge1xuICAgICAgICBcIkFjY291bnRJZFwiOiBcIkV0aGVyZXVtQWNjb3VudElkXCIsXG4gICAgICAgIFwiQWNjb3VudElkMjBcIjogXCJFdGhlcmV1bUFjY291bnRJZFwiLFxuICAgICAgICBcIkFjY291bnRJZDMyXCI6IFwiRXRoZXJldW1BY2NvdW50SWRcIixcbiAgICAgICAgXCJBZGRyZXNzXCI6IFwiQWNjb3VudElkXCIsXG4gICAgICAgIFwiTG9va3VwU291cmNlXCI6IFwiQWNjb3VudElkXCIsXG4gICAgICAgIFwiTG9va3VwMFwiOiBcIkFjY291bnRJZFwiLFxuICAgICAgICBcIkFzc2V0SWRcIjogXCJ1MzJcIixcbiAgICAgICAgXCJCYWxhbmNlXCI6IFwidTEyOFwiLFxuICAgIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQUM7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtJQUFBQyxTQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWYsSUFBQTtFQUFBO0VBQUEsSUFBQWdCLFFBQUEsR0FBQWYsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFhLFFBQUEsQ0FBQWpCLElBQUEsS0FBQWlCLFFBQUEsQ0FBQWpCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFnQixRQUFBLENBQUFqQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFhLGNBQUEsR0FBQUQsUUFBQSxDQUFBakIsSUFBQTtFQUFBO0lBZUQ7SUFBQUQsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQW1CLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFuQixjQUFBO0FBQUFBLGNBQUEsR0FBQWMsQ0FBQTtBQWRaTSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUFFQyxLQUFLLEVBQUU7QUFBSyxDQUFDLENBQUM7QUFBQztBQUFBdkIsY0FBQSxHQUFBYyxDQUFBO0FBQzlEUSxPQUFPLENBQUNFLE9BQU8sR0FBRztFQUNkQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0VBQ1BDLEtBQUssRUFBRTtJQUNILFdBQVcsRUFBRSxtQkFBbUI7SUFDaEMsYUFBYSxFQUFFLG1CQUFtQjtJQUNsQyxhQUFhLEVBQUUsbUJBQW1CO0lBQ2xDLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLGNBQWMsRUFBRSxXQUFXO0lBQzNCLFNBQVMsRUFBRSxXQUFXO0lBQ3RCLFNBQVMsRUFBRSxLQUFLO0lBQ2hCLFNBQVMsRUFBRTtFQUNmO0FBQ0osQ0FBQyJ9