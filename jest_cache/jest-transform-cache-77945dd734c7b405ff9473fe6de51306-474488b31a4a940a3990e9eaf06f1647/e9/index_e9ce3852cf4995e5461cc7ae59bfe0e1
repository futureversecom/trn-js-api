dcf13684a76d8a4926508653a4bac7b2
"use strict";

/* istanbul ignore next */
function cov_1drmjz8p37() {
  var path = "/Users/karishma/work/futureverse/trn-rootnet-api/packages/type-definitions/build/index.js";
  var hash = "2042b892bdb23d945af8aa18426ca1e2e893fb12";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/karishma/work/futureverse/trn-rootnet-api/packages/type-definitions/build/index.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 113
        }
      },
      "4": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 75
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 65
        }
      },
      "6": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 9,
          column: 60
        }
      },
      "7": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 10,
          column: 60
        }
      },
      "8": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 11,
          column: 47
        }
      },
      "9": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 49
        }
      },
      "10": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 59
        }
      },
      "11": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "12": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "13": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "14": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 28,
          column: 2
        }
      },
      "16": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 89
        }
      },
      "17": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 106
        }
      },
      "18": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 45,
          column: 6
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "20": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 52,
          column: 2
        }
      },
      "21": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 59,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "getBundle",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 34
          },
          end: {
            line: 35,
            column: 35
          }
        },
        loc: {
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2042b892bdb23d945af8aa18426ca1e2e893fb12"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1drmjz8p37 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1drmjz8p37();
var __importDefault =
/* istanbul ignore next */
(cov_1drmjz8p37().s[0]++,
/* istanbul ignore next */
(cov_1drmjz8p37().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1drmjz8p37().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1drmjz8p37().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1drmjz8p37().f[0]++;
  cov_1drmjz8p37().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1drmjz8p37().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1drmjz8p37().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1drmjz8p37().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1drmjz8p37().b[1][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_1drmjz8p37().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1drmjz8p37().s[3]++;
exports.typesBundleForPolkadot = exports.typesBundle = exports.typesAlias = exports.rpc = exports.types = void 0;
const orml_type_definitions_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[4]++, require("@open-web3/orml-type-definitions"));
const utils_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[5]++, require("@open-web3/orml-type-definitions/utils"));
const rootnet_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[6]++, __importDefault(require("./spec/rootnet")));
const porcini_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[7]++, __importDefault(require("./spec/porcini")));
const dex_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[8]++, __importDefault(require("./dex")));
const ethy_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[9]++, __importDefault(require("./ethy")));
const ethWallet_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[10]++, __importDefault(require("./ethWallet")));
const xrplBridge_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[11]++, __importDefault(require("./xrplBridge")));
const nft_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[12]++, __importDefault(require("./nft")));
const runtime_1 =
/* istanbul ignore next */
(cov_1drmjz8p37().s[13]++, __importDefault(require("./runtime")));
const rootDefs =
/* istanbul ignore next */
(cov_1drmjz8p37().s[14]++, {
  dex: dex_1.default,
  ethy: ethy_1.default,
  ethWallet: ethWallet_1.default,
  xrplBridge: xrplBridge_1.default,
  nft: nft_1.default,
  runtime: runtime_1.default
});
/* istanbul ignore next */
cov_1drmjz8p37().s[15]++;
exports.types = {
  ...orml_type_definitions_1.types,
  ...(0, utils_1.typesFromDefs)(rootDefs)
};
/* istanbul ignore next */
cov_1drmjz8p37().s[16]++;
exports.rpc = (0, utils_1.jsonrpcFromDefs)(rootDefs, {
  ...orml_type_definitions_1.rpc
});
/* istanbul ignore next */
cov_1drmjz8p37().s[17]++;
exports.typesAlias = (0, utils_1.typesAliasFromDefs)(rootDefs, {
  ...orml_type_definitions_1.typesAlias
});
function getBundle(versioned) {
  /* istanbul ignore next */
  cov_1drmjz8p37().f[1]++;
  cov_1drmjz8p37().s[18]++;
  return {
    rpc: exports.rpc,
    instances: {
      council: ['generalCouncil']
    },
    types: [...versioned].map(version => {
      /* istanbul ignore next */
      cov_1drmjz8p37().f[2]++;
      cov_1drmjz8p37().s[19]++;
      return {
        minmax: version.minmax,
        types: {
          ...exports.types,
          ...version.types
        }
      };
    }),
    alias: exports.typesAlias
  };
}
/* istanbul ignore next */
cov_1drmjz8p37().s[20]++;
exports.typesBundle = {
  spec: {
    root: getBundle(rootnet_1.default),
    porcini: getBundle(porcini_1.default)
  }
};
// Type overrides have priority issues
/* istanbul ignore next */
cov_1drmjz8p37().s[21]++;
exports.typesBundleForPolkadot = {
  spec: {
    root: getBundle(rootnet_1.default),
    porcini: getBundle(porcini_1.default)
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,