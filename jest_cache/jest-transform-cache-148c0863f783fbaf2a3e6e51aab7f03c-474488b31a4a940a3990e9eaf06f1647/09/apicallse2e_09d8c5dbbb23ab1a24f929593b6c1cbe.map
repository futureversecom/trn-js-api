{"file":"/Users/karishma/work/futureverse/trn-rootnet-api/packages/api/test/e2e/api.calls.e2e.ts","mappings":"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","names":[],"sources":["/Users/karishma/work/futureverse/trn-rootnet-api/packages/api/test/e2e/api.calls.e2e.ts"],"sourcesContent":["// Copyright 2019-2021 Centrality Investments Limited\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Hash, Block, AccountId, AssetId } from \"@therootnetwork/types/interfaces\";\nimport { createHeaderExtended } from '@polkadot/api-derive/type';\n// import type { FrameSystemEventRecord } from '@therootnetwork/types/lookup';\nimport { ApiPromise, WsProvider } from '@polkadot/api';\n// import { WsProvider } from '@polkadot/rpc-provider';\nimport { options } from '@therootnetwork/api';\n// import { Api as ApiPromise } from '../packages/api/src/Api';\n\ndescribe('e2e api calls', () => {\n  let api;\n  let blockHash: Hash;\n  beforeAll(async () => {\n    const providerUrl = 'wss://porcini.rootnet.app/archive/ws';\n    const provider = new WsProvider(providerUrl);\n    console.log('providerUrl', providerUrl);\n    api = new ApiPromise(options({ provider }));\n    await api.isReady;\n    blockHash = await api.rpc.chain.getBlockHash();\n  });\n\n  afterAll(async done => {\n    if (api) {\n      return await api.disconnect();\n    }\n    api = null;\n    done();\n  });\n\n  it('Get correct block', async () => {\n    const block: Block = await api.rpc.chain.getBlock(blockHash).then((r: any) => r.block);\n    expect(block.header.hash.toString()).toEqual(blockHash.toString());\n  });\n\n  it('Get correct validators', async () => {\n    const validators: AccountId[] = (await api.query.session.validators.at(blockHash)) as any;\n    expect(validators.length).toBeGreaterThan(0);\n  });\n\n  it('Expect author is in validators', async () => {\n    const block: Block = await api.rpc.chain.getBlock(blockHash).then((r: any) => r.block);\n    const header = block.header;\n    const validators: AccountId[] = (await api.query.session.validators.at(blockHash)) as any;\n    console.log('validators:',validators);\n    // const extHeader = createHeaderExtended(api.registry, header, validators);\n    // const author: AccountId = extHeader.author;\n    // expect(validators).toEqual(expect.arrayContaining([expect.objectContaining(author)]));\n  });\n\n  it('Expect at least one event', async () => {\n    const events = (await api.query.system.events.at(blockHash)) as any;\n    expect(events.length).toBeGreaterThan(0);\n  });\n\n  describe('Get session info', () => {\n    it('Get correct session information (length, last length, era, current index, session per era', async () => {\n      const currentSession = await api.derive.session.info();\n      expect(currentSession.currentEra.toNumber()).toBeGreaterThanOrEqual(0);\n      expect(currentSession.currentIndex.toNumber()).toBeGreaterThanOrEqual(0);\n      expect(currentSession.eraLength.toNumber()).toBeGreaterThanOrEqual(0);\n      expect(currentSession.isEpoch).toBe(true);\n      expect(currentSession.sessionLength.toNumber()).toBeGreaterThanOrEqual(0);\n      expect(currentSession.sessionsPerEra.toNumber()).toBeGreaterThanOrEqual(0);\n      expect(currentSession.validatorCount.toNumber()).toBeGreaterThanOrEqual(0);\n    });\n  });\n\n  describe('Get core asset id', () => {\n    it('Get correct spending asset id', async () => {\n      const spendingAssetId = (await api.query.genericAsset.spendingAssetId.at(blockHash)) as AssetId;\n      expect(spendingAssetId.gtn(0)).toBeTruthy();\n    });\n\n    it('Get correct staking asset id', async () => {\n      const stakingAssetId = (await api.query.genericAsset.stakingAssetId.at(blockHash)) as AssetId;\n      expect(stakingAssetId.gtn(0)).toBeTruthy();\n    });\n  });\n});\n"],"version":3}