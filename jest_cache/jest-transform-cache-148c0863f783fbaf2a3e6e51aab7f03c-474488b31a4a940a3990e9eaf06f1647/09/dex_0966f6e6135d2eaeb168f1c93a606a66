43718404f3aca781082c594053bca901
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    rpc: {
        "quote": {
            "description": "Given some amount of an asset and pair reserves, returns an equivalent amount of the other asset",
            "params": [
                {
                    "name": "amountA",
                    "type": "u128"
                },
                {
                    "name": "reserveA",
                    "type": "u128"
                },
                {
                    "name": "reserveB",
                    "type": "u128"
                }
            ],
            "type": "Json"
        },
        "getAmountsOut": {
            "description": "Given an array of AssetIds, return amounts out for an amount in",
            "params": [
                {
                    "name": "amountIn",
                    "type": "Balance"
                },
                {
                    "name": "path",
                    "type": "Vec<AssetId>"
                }
            ],
            "type": "Json"
        },
        "getAmountsIn": {
            "description": "Given an array of AssetIds, return amounts in for an amount out",
            "params": [
                {
                    "name": "amountOut",
                    "type": "Balance"
                },
                {
                    "name": "path",
                    "type": "Vec<AssetId>"
                }
            ],
            "type": "Json"
        },
        "getLPTokenID": {
            "description": "Given two AssetIds, return liquidity token created for the pair",
            "params": [
                {
                    "name": "assetA",
                    "type": "AssetId"
                },
                {
                    "name": "assetB",
                    "type": "AssetId"
                }
            ],
            "type": "Json"
        },
        "getLiquidity": {
            "description": "Given two AssetIds, return liquidity",
            "params": [
                {
                    "name": "assetA",
                    "type": "AssetId"
                },
                {
                    "name": "assetB",
                    "type": "AssetId"
                }
            ],
            "type": "Json"
        },
        "getTradingPairStatus": {
            "description": "Given two AssetIds, return whether trading pair is enabled or disabled",
            "params": [
                {
                    "name": "assetA",
                    "type": "AssetId"
                },
                {
                    "name": "assetB",
                    "type": "AssetId"
                }
            ],
            "type": "Json"
        }
    },
    types: {}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2thcmlzaG1hL3dvcmsvZnV0dXJldmVyc2UvdHJuLXJvb3RuZXQtYXBpL3BhY2thZ2VzL3R5cGUtZGVmaW5pdGlvbnMvc3JjL2RleC50cyIsIm1hcHBpbmdzIjoiOztBQUFBLGtCQUFlO0lBQ2IsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFO1lBQ1AsYUFBYSxFQUFFLGtHQUFrRztZQUNqSCxRQUFRLEVBQUU7Z0JBQ1I7b0JBQ0UsTUFBTSxFQUFFLFNBQVM7b0JBQ2pCLE1BQU0sRUFBRSxNQUFNO2lCQUNmO2dCQUNEO29CQUNFLE1BQU0sRUFBRSxVQUFVO29CQUNsQixNQUFNLEVBQUUsTUFBTTtpQkFDZjtnQkFDRDtvQkFDRSxNQUFNLEVBQUUsVUFBVTtvQkFDbEIsTUFBTSxFQUFFLE1BQU07aUJBQ2Y7YUFDRjtZQUNELE1BQU0sRUFBRSxNQUFNO1NBQ2Y7UUFDRCxlQUFlLEVBQUU7WUFDZixhQUFhLEVBQUUsaUVBQWlFO1lBQ2hGLFFBQVEsRUFBRTtnQkFDUjtvQkFDRSxNQUFNLEVBQUUsVUFBVTtvQkFDbEIsTUFBTSxFQUFFLFNBQVM7aUJBQ2xCO2dCQUNEO29CQUNFLE1BQU0sRUFBRSxNQUFNO29CQUNkLE1BQU0sRUFBRSxjQUFjO2lCQUN2QjthQUNGO1lBQ0QsTUFBTSxFQUFFLE1BQU07U0FDZjtRQUNELGNBQWMsRUFBRTtZQUNkLGFBQWEsRUFBRSxpRUFBaUU7WUFDaEYsUUFBUSxFQUFFO2dCQUNSO29CQUNFLE1BQU0sRUFBRSxXQUFXO29CQUNuQixNQUFNLEVBQUUsU0FBUztpQkFDbEI7Z0JBQ0Q7b0JBQ0UsTUFBTSxFQUFFLE1BQU07b0JBQ2QsTUFBTSxFQUFFLGNBQWM7aUJBQ3ZCO2FBQ0Y7WUFDRCxNQUFNLEVBQUUsTUFBTTtTQUNmO1FBQ0QsY0FBYyxFQUFFO1lBQ2QsYUFBYSxFQUFFLGlFQUFpRTtZQUNoRixRQUFRLEVBQUU7Z0JBQ1I7b0JBQ0UsTUFBTSxFQUFFLFFBQVE7b0JBQ2hCLE1BQU0sRUFBRSxTQUFTO2lCQUNsQjtnQkFDRDtvQkFDRSxNQUFNLEVBQUUsUUFBUTtvQkFDaEIsTUFBTSxFQUFFLFNBQVM7aUJBQ2xCO2FBQ0Y7WUFDRCxNQUFNLEVBQUUsTUFBTTtTQUNmO1FBQ0QsY0FBYyxFQUFFO1lBQ2QsYUFBYSxFQUFFLHNDQUFzQztZQUNyRCxRQUFRLEVBQUU7Z0JBQ1I7b0JBQ0UsTUFBTSxFQUFFLFFBQVE7b0JBQ2hCLE1BQU0sRUFBRSxTQUFTO2lCQUNsQjtnQkFDRDtvQkFDRSxNQUFNLEVBQUUsUUFBUTtvQkFDaEIsTUFBTSxFQUFFLFNBQVM7aUJBQ2xCO2FBQ0Y7WUFDRCxNQUFNLEVBQUUsTUFBTTtTQUNmO1FBQ0Qsc0JBQXNCLEVBQUU7WUFDdEIsYUFBYSxFQUFFLHdFQUF3RTtZQUN2RixRQUFRLEVBQUU7Z0JBQ1I7b0JBQ0UsTUFBTSxFQUFFLFFBQVE7b0JBQ2hCLE1BQU0sRUFBRSxTQUFTO2lCQUNsQjtnQkFDRDtvQkFDRSxNQUFNLEVBQUUsUUFBUTtvQkFDaEIsTUFBTSxFQUFFLFNBQVM7aUJBQ2xCO2FBQ0Y7WUFDRCxNQUFNLEVBQUUsTUFBTTtTQUNmO0tBQ0Y7SUFDRCxLQUFLLEVBQUUsRUFBRTtDQUNWLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2thcmlzaG1hL3dvcmsvZnV0dXJldmVyc2UvdHJuLXJvb3RuZXQtYXBpL3BhY2thZ2VzL3R5cGUtZGVmaW5pdGlvbnMvc3JjL2RleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIHJwYzoge1xuICAgIFwicXVvdGVcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkdpdmVuIHNvbWUgYW1vdW50IG9mIGFuIGFzc2V0IGFuZCBwYWlyIHJlc2VydmVzLCByZXR1cm5zIGFuIGVxdWl2YWxlbnQgYW1vdW50IG9mIHRoZSBvdGhlciBhc3NldFwiLFxuICAgICAgXCJwYXJhbXNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiYW1vdW50QVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcInUxMjhcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwicmVzZXJ2ZUFcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJ1MTI4XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcInJlc2VydmVCXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwidTEyOFwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJKc29uXCJcbiAgICB9LFxuICAgIFwiZ2V0QW1vdW50c091dFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiR2l2ZW4gYW4gYXJyYXkgb2YgQXNzZXRJZHMsIHJldHVybiBhbW91bnRzIG91dCBmb3IgYW4gYW1vdW50IGluXCIsXG4gICAgICBcInBhcmFtc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJhbW91bnRJblwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIkJhbGFuY2VcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwicGF0aFwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIlZlYzxBc3NldElkPlwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJKc29uXCJcbiAgICB9LFxuICAgIFwiZ2V0QW1vdW50c0luXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJHaXZlbiBhbiBhcnJheSBvZiBBc3NldElkcywgcmV0dXJuIGFtb3VudHMgaW4gZm9yIGFuIGFtb3VudCBvdXRcIixcbiAgICAgIFwicGFyYW1zXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcImFtb3VudE91dFwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIkJhbGFuY2VcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwicGF0aFwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIlZlYzxBc3NldElkPlwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJKc29uXCJcbiAgICB9LFxuICAgIFwiZ2V0TFBUb2tlbklEXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJHaXZlbiB0d28gQXNzZXRJZHMsIHJldHVybiBsaXF1aWRpdHkgdG9rZW4gY3JlYXRlZCBmb3IgdGhlIHBhaXJcIixcbiAgICAgIFwicGFyYW1zXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcImFzc2V0QVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIkFzc2V0SWRcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiYXNzZXRCXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiQXNzZXRJZFwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJKc29uXCJcbiAgICB9LFxuICAgIFwiZ2V0TGlxdWlkaXR5XCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJHaXZlbiB0d28gQXNzZXRJZHMsIHJldHVybiBsaXF1aWRpdHlcIixcbiAgICAgIFwicGFyYW1zXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcImFzc2V0QVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIkFzc2V0SWRcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiYXNzZXRCXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiQXNzZXRJZFwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJKc29uXCJcbiAgICB9LFxuICAgIFwiZ2V0VHJhZGluZ1BhaXJTdGF0dXNcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkdpdmVuIHR3byBBc3NldElkcywgcmV0dXJuIHdoZXRoZXIgdHJhZGluZyBwYWlyIGlzIGVuYWJsZWQgb3IgZGlzYWJsZWRcIixcbiAgICAgIFwicGFyYW1zXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcImFzc2V0QVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIkFzc2V0SWRcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiYXNzZXRCXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiQXNzZXRJZFwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJKc29uXCJcbiAgICB9XG4gIH0sXG4gIHR5cGVzOiB7fVxufTtcbiJdLCJ2ZXJzaW9uIjozfQ==