{"file":"/Users/karishma/work/futureverse/trn-rootnet-api/packages/types/src/index.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAAgC;AAChC,yBAAuB;AACvB,4BAA0B;AAI1B,uEAA+J;AAE/J,gEAAgD;AAEnC,QAAA,KAAK,GAAkB,wBAAY,CAAC;AAEpC,QAAA,GAAG,GAAqE,sBAAU,CAAC;AAEnF,QAAA,UAAU,GAAuC,6BAAgB,CAAC;AAElE,QAAA,WAAW,GAAG,8BAAmD,CAAC;AAE/E,2DAA2D","names":[],"sources":["/Users/karishma/work/futureverse/trn-rootnet-api/packages/types/src/index.ts"],"sourcesContent":["import '@polkadot/types/lookup';\nimport './augment/api';\nimport './lookup/rootnet';\n\nimport type { DefinitionRpc, DefinitionRpcSub, OverrideBundleType, OverrideModuleType, RegistryTypes } from '@polkadot/types/types';\n\nimport { rpc as rootnetRpc, types as rootnetTypes, typesAlias as rootnetTypeAlias, typesBundle as rootnetTypesBundle } from '@therootnetwork/type-definitions';\n\nexport * as lookupTypes from './lookup/rootnet';\n\nexport const types: RegistryTypes = rootnetTypes;\n\nexport const rpc: Record<string, Record<string, DefinitionRpc | DefinitionRpcSub>> = rootnetRpc;\n\nexport const typesAlias: Record<string, OverrideModuleType> = rootnetTypeAlias;\n\nexport const typesBundle = rootnetTypesBundle as unknown as OverrideBundleType;\n\n// export const signedExtensions = rootnetSignedExtensions;\n"],"version":3}