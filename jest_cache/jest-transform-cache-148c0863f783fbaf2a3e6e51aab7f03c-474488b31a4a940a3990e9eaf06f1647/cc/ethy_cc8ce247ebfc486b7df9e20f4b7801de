388334af1ecee3a9dcacb2cff20eb27c
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    rpc: {
        "getEventProof": {
            "description": "Get ETH event proof for event Id",
            "params": [
                {
                    "name": "eventId",
                    "type": "EventProofId"
                }
            ],
            "type": "Option<EthEventProofResponse>"
        },
        "getXrplTxProof": {
            "description": "Get XRPL event proof for event Id",
            "params": [
                {
                    "name": "eventId",
                    "type": "EventProofId"
                }
            ],
            "type": "Option<XrplEventProofResponse>"
        }
    },
    types: {
        VersionedEventProof: {
            _enum: {
                sentinel: null,
                EventProof: "EventProof",
            },
        },
        ExtrinsicSignature: "EthereumSignature",
        EthyId: "[u8; 32]",
        EthyEventId: "u64",
        EthEventProofResponse: {
            "event_id": "EventProofId",
            "signatures": "Vec<Bytes>",
            "validators": "Vec<AccountId20>",
            "validator_set_id": "ValidatorSetId",
            "block": "H256",
            "tag": "Option<Bytes>"
        },
        EventProofId: "u64",
        EthereumSignature: {
            r: "H256",
            s: "H256",
            v: "U8",
        },
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2thcmlzaG1hL3dvcmsvZnV0dXJldmVyc2UvdHJuLXJvb3RuZXQtYXBpL3BhY2thZ2VzL3R5cGUtZGVmaW5pdGlvbnMvc3JjL2V0aHkudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxrQkFBZTtJQUNiLEdBQUcsRUFBRTtRQUNILGVBQWUsRUFBRTtZQUNmLGFBQWEsRUFBRSxrQ0FBa0M7WUFDakQsUUFBUSxFQUFFO2dCQUNSO29CQUNFLE1BQU0sRUFBRSxTQUFTO29CQUNqQixNQUFNLEVBQUUsY0FBYztpQkFDdkI7YUFDRjtZQUNELE1BQU0sRUFBRSwrQkFBK0I7U0FDeEM7UUFDRCxnQkFBZ0IsRUFBRTtZQUNoQixhQUFhLEVBQUUsbUNBQW1DO1lBQ2xELFFBQVEsRUFBRTtnQkFDUjtvQkFDRSxNQUFNLEVBQUUsU0FBUztvQkFDakIsTUFBTSxFQUFFLGNBQWM7aUJBQ3ZCO2FBQ0Y7WUFDRCxNQUFNLEVBQUUsZ0NBQWdDO1NBQ3pDO0tBQ0Y7SUFDRCxLQUFLLEVBQUU7UUFDTCxtQkFBbUIsRUFBRTtZQUNuQixLQUFLLEVBQUU7Z0JBQ0wsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsVUFBVSxFQUFFLFlBQVk7YUFDekI7U0FDRjtRQUNELGtCQUFrQixFQUFFLG1CQUFtQjtRQUN2QyxNQUFNLEVBQUUsVUFBVTtRQUNsQixXQUFXLEVBQUUsS0FBSztRQUNsQixxQkFBcUIsRUFBRTtZQUNyQixVQUFVLEVBQUUsY0FBYztZQUMxQixZQUFZLEVBQUUsWUFBWTtZQUMxQixZQUFZLEVBQUUsa0JBQWtCO1lBQ2hDLGtCQUFrQixFQUFFLGdCQUFnQjtZQUNwQyxPQUFPLEVBQUUsTUFBTTtZQUNmLEtBQUssRUFBRSxlQUFlO1NBQ3ZCO1FBQ0QsWUFBWSxFQUFFLEtBQUs7UUFDbkIsaUJBQWlCLEVBQUU7WUFDakIsQ0FBQyxFQUFFLE1BQU07WUFDVCxDQUFDLEVBQUUsTUFBTTtZQUNULENBQUMsRUFBRSxJQUFJO1NBQ1I7S0FDRjtDQUNGLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2thcmlzaG1hL3dvcmsvZnV0dXJldmVyc2UvdHJuLXJvb3RuZXQtYXBpL3BhY2thZ2VzL3R5cGUtZGVmaW5pdGlvbnMvc3JjL2V0aHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBycGM6IHtcbiAgICBcImdldEV2ZW50UHJvb2ZcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkdldCBFVEggZXZlbnQgcHJvb2YgZm9yIGV2ZW50IElkXCIsXG4gICAgICBcInBhcmFtc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJldmVudElkXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiRXZlbnRQcm9vZklkXCJcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIFwidHlwZVwiOiBcIk9wdGlvbjxFdGhFdmVudFByb29mUmVzcG9uc2U+XCJcbiAgICB9LFxuICAgIFwiZ2V0WHJwbFR4UHJvb2ZcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkdldCBYUlBMIGV2ZW50IHByb29mIGZvciBldmVudCBJZFwiLFxuICAgICAgXCJwYXJhbXNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiZXZlbnRJZFwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcIkV2ZW50UHJvb2ZJZFwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInR5cGVcIjogXCJPcHRpb248WHJwbEV2ZW50UHJvb2ZSZXNwb25zZT5cIlxuICAgIH1cbiAgfSxcbiAgdHlwZXM6IHtcbiAgICBWZXJzaW9uZWRFdmVudFByb29mOiB7XG4gICAgICBfZW51bToge1xuICAgICAgICBzZW50aW5lbDogbnVsbCxcbiAgICAgICAgRXZlbnRQcm9vZjogXCJFdmVudFByb29mXCIsXG4gICAgICB9LFxuICAgIH0sXG4gICAgRXh0cmluc2ljU2lnbmF0dXJlOiBcIkV0aGVyZXVtU2lnbmF0dXJlXCIsXG4gICAgRXRoeUlkOiBcIlt1ODsgMzJdXCIsXG4gICAgRXRoeUV2ZW50SWQ6IFwidTY0XCIsXG4gICAgRXRoRXZlbnRQcm9vZlJlc3BvbnNlOiB7XG4gICAgICBcImV2ZW50X2lkXCI6IFwiRXZlbnRQcm9vZklkXCIsXG4gICAgICBcInNpZ25hdHVyZXNcIjogXCJWZWM8Qnl0ZXM+XCIsXG4gICAgICBcInZhbGlkYXRvcnNcIjogXCJWZWM8QWNjb3VudElkMjA+XCIsXG4gICAgICBcInZhbGlkYXRvcl9zZXRfaWRcIjogXCJWYWxpZGF0b3JTZXRJZFwiLFxuICAgICAgXCJibG9ja1wiOiBcIkgyNTZcIixcbiAgICAgIFwidGFnXCI6IFwiT3B0aW9uPEJ5dGVzPlwiXG4gICAgfSxcbiAgICBFdmVudFByb29mSWQ6IFwidTY0XCIsXG4gICAgRXRoZXJldW1TaWduYXR1cmU6IHtcbiAgICAgIHI6IFwiSDI1NlwiLFxuICAgICAgczogXCJIMjU2XCIsXG4gICAgICB2OiBcIlU4XCIsXG4gICAgfSxcbiAgfVxufTtcbiJdLCJ2ZXJzaW9uIjozfQ==