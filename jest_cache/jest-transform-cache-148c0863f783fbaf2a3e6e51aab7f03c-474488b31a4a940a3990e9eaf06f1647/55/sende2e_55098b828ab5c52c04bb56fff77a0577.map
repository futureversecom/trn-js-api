{"file":"/Users/karishma/work/futureverse/trn-rootnet-api/packages/api/test/e2e/send.e2e.ts","mappings":";AAAA,8CAA8C;AAC9C,2DAA2D;AAC3D,EAAE;AACF,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,4EAA4E;AAC5E,iDAAiD;AACjD,wCAAwC;AACxC,mCAAmC;AACnC,0EAA0E;AAC1E,sCAAsC;AACtC,gDAAgD;AAChD,qGAAqG;AACrG,uDAAuD;AACvD,kEAAkE;AAClE,sDAAsD;AACtD,uDAAuD;AACvD,0BAA0B;AAC1B,gBAAgB;AAChB,aAAa;AACb,UAAU;AACV,EAAE;AACF,2EAA2E;AAC3E,qDAAqD;AACrD,iDAAiD;AACjD,wCAAwC;AACxC,mCAAmC;AACnC,0EAA0E;AAC1E,sCAAsC;AACtC,gDAAgD;AAChD,iGAAiG;AACjG,uDAAuD;AACvD,8DAA8D;AAC9D,sDAAsD;AACtD,uDAAuD;AACvD,0BAA0B;AAC1B,gBAAgB;AAChB,aAAa;AACb,UAAU;AACV,MAAM","names":[],"sources":["/Users/karishma/work/futureverse/trn-rootnet-api/packages/api/test/e2e/send.e2e.ts"],"sourcesContent":["// import { WebSocket } from '@polkadot/x-ws';\n// import { RpcCoder } from \"@polkadot/rpc-provider/coder\";\n//\n// describe('send', (): void => {\n//\n//     it('Send request using websocket for Azalea node', async (done)  => {\n//         const providerUrl = 'wss://cennznet.unfrastructure.io/public/ws';\n//         const ws = new WebSocket(providerUrl);\n//         const coder = new RpcCoder();\n//         ws.onopen = function() {\n//             const requestObject = coder.encodeJson('system_chain', []);\n//             ws.send(requestObject);\n//             ws.onmessage = function (event) {\n//                 expect(event.data).toEqual('{\"jsonrpc\":\"2.0\",\"result\":\"CENNZnet Azalea\",\"id\":1}');\n//                 const data = JSON.parse(event.data);\n//                 expect(data.result).toEqual('CENNZnet Azalea');\n//                 expect(data.id).toBeGreaterThan(0);\n//                 expect(data.jsonrpc).toEqual(\"2.0\");\n//                 done();\n//             }\n//         };\n//     });\n//\n//     it('Send request using websocket for local node', async (done)  => {\n//         const providerUrl = 'ws://127.0.0.1:9944';\n//         const ws = new WebSocket(providerUrl);\n//         const coder = new RpcCoder();\n//         ws.onopen = function() {\n//             const requestObject = coder.encodeJson('system_chain', []);\n//             ws.send(requestObject);\n//             ws.onmessage = function (event) {\n//                 expect(event.data).toEqual('{\"jsonrpc\":\"2.0\",\"result\":\"Development\",\"id\":1}');\n//                 const data = JSON.parse(event.data);\n//                 expect(data.result).toEqual('Development');\n//                 expect(data.id).toBeGreaterThan(0);\n//                 expect(data.jsonrpc).toEqual(\"2.0\");\n//                 done();\n//             }\n//         };\n//     });\n// });\n"],"version":3}